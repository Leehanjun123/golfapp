import React, { useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  Dimensions,
  Image,
  StatusBar,
} from 'react-native';
import { LinearGradient } from 'expo-linear-gradient';
import { Ionicons } from '@expo/vector-icons';
import AsyncStorage from '@react-native-async-storage/async-storage';

const { width, height } = Dimensions.get('window');

interface OnboardingStep {
  id: number;
  title: string;
  description: string;
  icon: string;
  color: string[];
  features: string[];
}

interface OnboardingScreenProps {
  onComplete: () => void;
}

const OnboardingScreen: React.FC<OnboardingScreenProps> = ({ onComplete }) => {
  const [currentStep, setCurrentStep] = useState(0);

  const steps: OnboardingStep[] = [
    {
      id: 1,
      title: 'ÌôòÏòÅÌï©ÎãàÎã§! üéâ',
      description: 'Golf AI CoachÏôÄ Ìï®Íªò\nÌîÑÎ°úÍ∏â Í≥®ÌîÑ Ïã§Î†•ÏùÑ ÎßåÎì§Ïñ¥Î≥¥ÏÑ∏Ïöî',
      icon: 'golf',
      color: ['#667eea', '#764ba2'],
      features: ['95% Ï†ïÌôïÎèÑ AI Ïä§Ïúô Î∂ÑÏÑù', 'Í∞úÏù∏ ÎßûÏ∂§ ÌõàÎ†® Í≥ÑÌöç', 'ÌîÑÎ°ú Í≥®ÌçºÏôÄ Ïã§ÏãúÍ∞Ñ ÎπÑÍµê'],
    },
    {
      id: 2,
      title: 'ü§ñ AI Ïä§Ïúô Î∂ÑÏÑù',
      description: 'ÏµúÏ≤®Îã® AIÎ°ú ÎãπÏã†Ïùò Ïä§ÏúôÏùÑ\nÌîÑÎ†àÏûÑÎ≥ÑÎ°ú Ï†ïÎ∞Ä Î∂ÑÏÑùÌï©ÎãàÎã§',
      icon: 'camera',
      color: ['#4CAF50', '#2E7D32'],
      features: [
        '4Í∞ú AI Î™®Îç∏ ÏïôÏÉÅÎ∏î Î∂ÑÏÑù',
        'Ïñ¥ÎìúÎ†àÏä§Î∂ÄÌÑ∞ ÌåîÎ°úÏö∞Ïä§Î£®ÍπåÏßÄ',
        'Ïã§ÏãúÍ∞Ñ Í∞úÏÑ† Ìè¨Ïù∏Ìä∏ Ï†úÏãú',
      ],
    },
    {
      id: 3,
      title: 'üìä Í∞úÏù∏ ÎßûÏ∂§ AI',
      description: 'ÎãπÏã†ÎßåÏùò AIÍ∞Ä ÌïôÏäµÌïòÎ©∞\nÏ†êÏ†ê Îçî Ï†ïÌôïÌïú Î∂ÑÏÑùÏùÑ Ï†úÍ≥µÌï©ÎãàÎã§',
      icon: 'bulb',
      color: ['#FF6B6B', '#FF8E53'],
      features: ['Í∞úÏù∏ Îç∞Ïù¥ÌÑ∞Î°ú AI Ïû¨ÌïôÏäµ', 'ÎßûÏ∂§Ìòï ÌõàÎ†® Í≥ÑÌöç ÏÉùÏÑ±', 'Ïó∞ÏÜç ÌïôÏäµÏúºÎ°ú Ï†ïÌôïÎèÑ Ìñ•ÏÉÅ'],
    },
    {
      id: 4,
      title: 'üèÜ ÏÜåÏÖú Ï±åÎ¶∞ÏßÄ',
      description: 'ÏπúÍµ¨Îì§Í≥º Í≤ΩÏüÅÌïòÎ©∞\nÏû¨ÎØ∏ÏûàÍ≤å Ïã§Î†•ÏùÑ Ìñ•ÏÉÅÏãúÌÇ§ÏÑ∏Ïöî',
      icon: 'people',
      color: ['#4ECDC4', '#44A08D'],
      features: ['Ïã§ÏãúÍ∞Ñ Î¶¨ÎçîÎ≥¥Îìú Í≤ΩÏüÅ', 'Ï£ºÍ∞Ñ/ÏõîÍ∞Ñ Ï±åÎ¶∞ÏßÄ Ï∞∏Ïó¨', 'ÏπúÍµ¨ Ï¥àÎåÄ Î∞è ÏÑ±Í≥º Í≥µÏú†'],
    },
    {
      id: 5,
      title: 'üöÄ ÏãúÏûëÌï† Ï§ÄÎπÑ ÏôÑÎ£å!',
      description: 'Ïù¥Ï†ú Golf AI CoachÏôÄ Ìï®Íªò\nÍ≥®ÌîÑ Ïó¨Ï†ïÏùÑ ÏãúÏûëÌï¥Î≥¥ÏÑ∏Ïöî',
      icon: 'rocket',
      color: ['#9C27B0', '#673AB7'],
      features: [
        'Î¨¥Î£å Ïä§Ïúô Î∂ÑÏÑù 5Ìöå Ï†úÍ≥µ',
        'Í∏∞Î≥∏ ÌõàÎ†® Í≥ÑÌöç Ïù¥Ïö© Í∞ÄÎä•',
        'Ïñ∏Ï†úÎì† ÌîÑÎ¶¨ÎØ∏ÏóÑ ÏóÖÍ∑∏Î†àÏù¥Îìú',
      ],
    },
  ];

  const currentStepData = steps[currentStep];

  const handleNext = () => {
    if (currentStep < steps.length - 1) {
      setCurrentStep(currentStep + 1);
    } else {
      completeOnboarding();
    }
  };

  const handlePrevious = () => {
    if (currentStep > 0) {
      setCurrentStep(currentStep - 1);
    }
  };

  const handleSkip = () => {
    completeOnboarding();
  };

  const completeOnboarding = async () => {
    try {
      await AsyncStorage.setItem('hasSeenOnboarding', 'true');
      onComplete();
    } catch (error) {
      console.error('Error saving onboarding status:', error);
      onComplete();
    }
  };

  return (
    <LinearGradient colors={currentStepData.color} style={styles.container}>
      <StatusBar barStyle="light-content" />

      {/* Skip Button */}
      {currentStep < steps.length - 1 && (
        <TouchableOpacity style={styles.skipButton} onPress={handleSkip}>
          <Text style={styles.skipText}>Í±¥ÎÑàÎõ∞Í∏∞</Text>
        </TouchableOpacity>
      )}

      {/* Content */}
      <View style={styles.content}>
        {/* Icon */}
        <View style={styles.iconContainer}>
          <Ionicons name={currentStepData.icon as any} size={80} color="white" />
        </View>

        {/* Title and Description */}
        <Text style={styles.title}>{currentStepData.title}</Text>
        <Text style={styles.description}>{currentStepData.description}</Text>

        {/* Features List */}
        <View style={styles.featuresContainer}>
          {currentStepData.features.map((feature, index) => (
            <View key={index} style={styles.featureItem}>
              <Ionicons name="checkmark-circle" size={20} color="white" />
              <Text style={styles.featureText}>{feature}</Text>
            </View>
          ))}
        </View>
      </View>

      {/* Bottom Section */}
      <View style={styles.bottomSection}>
        {/* Progress Dots */}
        <View style={styles.progressContainer}>
          {steps.map((_, index) => (
            <View
              key={index}
              style={[styles.progressDot, index === currentStep && styles.activeDot]}
            />
          ))}
        </View>

        {/* Navigation Buttons */}
        <View style={styles.navigationContainer}>
          <TouchableOpacity
            style={[styles.navButton, currentStep === 0 && styles.disabledButton]}
            onPress={handlePrevious}
            disabled={currentStep === 0}
          >
            <Ionicons
              name="chevron-back"
              size={24}
              color={currentStep === 0 ? 'rgba(255,255,255,0.3)' : 'white'}
            />
            <Text style={[styles.navButtonText, currentStep === 0 && styles.disabledText]}>
              Ïù¥Ï†Ñ
            </Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.nextButton} onPress={handleNext}>
            <Text style={styles.nextButtonText}>
              {currentStep === steps.length - 1 ? 'ÏãúÏûëÌïòÍ∏∞' : 'Îã§Ïùå'}
            </Text>
            <Ionicons
              name={currentStep === steps.length - 1 ? 'rocket' : 'chevron-forward'}
              size={24}
              color="white"
            />
          </TouchableOpacity>
        </View>
      </View>
    </LinearGradient>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingTop: 50,
  },
  skipButton: {
    position: 'absolute',
    top: 60,
    right: 20,
    zIndex: 1,
    paddingHorizontal: 15,
    paddingVertical: 8,
    backgroundColor: 'rgba(255,255,255,0.2)',
    borderRadius: 20,
  },
  skipText: {
    color: 'white',
    fontSize: 14,
    fontWeight: '600',
  },
  content: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    paddingHorizontal: 40,
  },
  iconContainer: {
    width: 120,
    height: 120,
    borderRadius: 60,
    backgroundColor: 'rgba(255,255,255,0.2)',
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 40,
  },
  title: {
    fontSize: 28,
    fontWeight: 'bold',
    color: 'white',
    textAlign: 'center',
    marginBottom: 20,
  },
  description: {
    fontSize: 18,
    color: 'rgba(255,255,255,0.9)',
    textAlign: 'center',
    lineHeight: 26,
    marginBottom: 40,
  },
  featuresContainer: {
    alignSelf: 'stretch',
    marginTop: 20,
  },
  featureItem: {
    flexDirection: 'row',
    alignItems: 'center',
    marginBottom: 15,
    backgroundColor: 'rgba(255,255,255,0.1)',
    paddingHorizontal: 20,
    paddingVertical: 12,
    borderRadius: 25,
  },
  featureText: {
    fontSize: 16,
    color: 'white',
    marginLeft: 12,
    fontWeight: '500',
  },
  bottomSection: {
    paddingHorizontal: 40,
    paddingBottom: 50,
  },
  progressContainer: {
    flexDirection: 'row',
    justifyContent: 'center',
    alignItems: 'center',
    marginBottom: 40,
  },
  progressDot: {
    width: 8,
    height: 8,
    borderRadius: 4,
    backgroundColor: 'rgba(255,255,255,0.4)',
    marginHorizontal: 4,
  },
  activeDot: {
    backgroundColor: 'white',
    width: 24,
  },
  navigationContainer: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  navButton: {
    flexDirection: 'row',
    alignItems: 'center',
    paddingVertical: 15,
    paddingHorizontal: 20,
    backgroundColor: 'rgba(255,255,255,0.2)',
    borderRadius: 25,
    minWidth: 100,
  },
  disabledButton: {
    backgroundColor: 'rgba(255,255,255,0.1)',
  },
  navButtonText: {
    color: 'white',
    fontSize: 16,
    fontWeight: '600',
    marginLeft: 5,
  },
  disabledText: {
    color: 'rgba(255,255,255,0.3)',
  },
  nextButton: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: 'white',
    paddingVertical: 15,
    paddingHorizontal: 30,
    borderRadius: 25,
    elevation: 5,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.25,
    shadowRadius: 4,
  },
  nextButtonText: {
    color: '#333',
    fontSize: 16,
    fontWeight: 'bold',
    marginRight: 8,
  },
});

export default OnboardingScreen;
